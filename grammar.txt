% Backusâ€“Naur form of the grammar
% this isnt guaranteed to be correct, its only here as a reference

% capitalised words are terminals
% words in double quotes "" are terminals

block ::= (chunk)+

chunk ::= function | comment | assignment | question | loop | conditional | "o weka!"

% special functions
% currently none
function ::= 

comment ::= "mi pilin e ni:" Text 
          | "mi pilin e ni:\n" {Text} "o pini!" 


assignment ::= var "li" exp Period 
             | var "li ni:" sentence Period

exp ::= number | bool | str

var ::= numbervar | boolvar | stringvar

numbervar ::= "nanpa" Name
boolvar ::= "sona" Name
stringvar ::= "nimi" Name

bool ::= "lon" | boolvar | bool "ala"

str ::= Word | StringLiteral | stringvar

number ::= numberLiteral | numbervar
numberLiteral ::= "ala" | "ali" | ("mute" | "luka" | "tu" | "wan")+

sentence ::= StringLiteral (Period)? | binop Period | relop Period

question ::= number "li seme?" | str "li seme?" | bool "li lon ala lon?"

conditional ::= (relop|bool) "la o pali e ni:" block ("ante la:" block)? "o pini."

loop ::= "tenpo" number "la o pali e ni:" block "o pini."

% binary operators
binop ::= number "li suli e" number 
        | number "li lili e" number
        | str "li suli e" str

% binary operators that evaluate to bool
relop ::= number "la" number "li suli"
        | number "la" number "li lili" 
        | exp "li sama e" exp 
        | exp "li sama ala e" exp


Word ::= any word from the official dictionary (see wordlist.lua)
StringLiteral ::= a series of alphanumeric characters enclosed in double quotes ""
Text ::= a line of text
Period ::= the character '.' or '!'